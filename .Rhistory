install(kernsmooth)
install.packages(kernsmooth)
install.packages(kernsmooth)
install.packages(KernSmooth)
"KernSmooth"
install.packages("kernsmooth")
install.packages('kernsmooth')
install.packages('KernSmooth')
library(KernSmooth)
library(KernSmooth)
demo()
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5+7
x
View(x)
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
v <- c(z,555,z)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div = z/my_sqrt
my_div = z<-my_sqrt
my_div ,_ z / my_sqrt
my_div <_ z / my_sqrt
z
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 100
z * 2 + 1000
my_div
5+7
x <- 5+7
x
y <- x + 3
y <- x - 3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 +1000
my_div
y<- c(1.7,"a")
y
x <- vector("numeric",10)
x
x <- c(TRUE, 1)
x
x <- c(true,1,"a")
x <- c(TRUE,1,"a")
X
x
x<- 0:6
x
as.numeric(x)
x
as.logical(x)
as.character(x)
as.complex(x)
x <- ("a","b")
x <- c("a","b")
as.numeric(x)
x
y <- as.numeric(x)
y
x <- list(1,"a",TRUE,1+4i)
x
y <- list(c(1,2),"a")
y
m <- matrix(nrow = 2, ncol = 3)
dim(m)
attributes(m)
m <- matrix(1:6,nrow = 2, ncol = 3)
m
m <- matrix(1:10,nrow = 2, ncol = 3)
m <- matrix(1:6,nrow = 2, ncol = 3)
n <- matrix(1:6,nrow = 2, ncol = 3)
n <- matrix(1:7,nrow = 2, ncol = 3)
n
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
x
y
cbind(x,y)
z = cbind(x,y)
z
p = rbind(x,y)
p
x <- factor(c("yes","yes","no","no","yes"))
x
table(x)
unclass(x)
x
x
unclass(x)
x <- factor(c("yes","yes","no","yes","no"))
x <- factor(c("yes","yes","no","yes","no"))
table(x)
unclass(x)
attr(,"levels")
attr(x,"levels")
x <- factor(c("yes","yes","no","yes","no"),levels = c("yes","no"))
table(x)
unclass(x)
unclass(x)
##Missing Values
x = c(1,NA,10,3)
is.na(x)
is.nan(x)
x = c(1,NaN,NA,0,9)
is.nan(x)
x <- data.frame(foo = 1:4,bar=c(T,F,F,F))
X
x
rox(x)
x <- data.frame(foo = 1:4,bar=c(T,F,F,F))
nrow(x)
ncol(x)
###Names###
x = 1:3
names(x) = c("foo","bar","north")
x
names(x)
m = matrix(1:4,nrow=2,ncol=2)
#Matrix namex
m = matrix(1:4,nrow=2,ncol=2)
dimnames(m) = list(c("a","b"),c("x","y"))
m
help(read.table)
y <- data.frame(a=1,b="a")
y
dput(y)
y <- data.frame(a=1,b="a")
dput(y)
setwd("h:/Coursera/R_Programming")
dput(y)
dput(y, file = "y.r")
new.y <- dget("y.r")
new.y
x <- "foo"
y <- data.frame(a=1,b=2)
dump(c("x","y"),file="data.R")
rm(x,y)
x
y
source("data.R")
x
y
x <- list(foo=1:4,bar=0.6)
x[1]
x[[1]]
x$bar
x[["bar"]]
x["bar"]
x[2]
x<- list(foo=1:4,bar = 0.6, baz = "hello")
x[C(1,3)]
x<- list(foo=1:4,bar = 0.6, baz = "hello")
x[c(1,3)]
x<- list(foo=1:4,bar = 0.6, baz = "hello")
name <- "foo"
x[[name]]
x$name
x$foo
x<- list(foo=1:4,bar = 0.6, baz = "hello")
name <- "foo"
x[[name]] #Need double brackets to call computed field
x$name #does not exist
x$foo #exists
x<-list(a=list(10,12,14),b=c(3.14,2.81))
x
x$a[1]
x$a
x$b
x$b[2]
x[[c(1,3)]]
x[[c(2,3)]]
x[[c(2,2)]]
x[[c(1,3)]]
x[[1]][[3]]
x[1][3]
x[a][[1]]
x[1]
x[1][2]
x[[c(1,3)]] #item 1,3
